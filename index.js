"use strict";
/* eslint-disable node/global-require */
const XU = require("@sembiance/xu"),
	{minify} = require("html-minifier"),
	path = require("path");

const HTML_MINIFY_OPTIONS =
{
	caseSensitive                 : false,
	collapseBooleanAttributes     : true,
	collapseInlineTagWhitespace   : false,
	collapseWhitespace            : true,
	conservativeCollapse          : false,
	continueOnParseError          : false,
	decodeEntities                : false,
	html5                         : true,
	includeAutoGeneratedTags      : true,
	keepClosingSlash              : false,
	minifyCSS                     : true,
	preserveLineBreaks            : false,
	preventAttributesEscaping     : false,
	processConditionalComments    : false,
	quoteCharacter                : '"',
	removeAttributeQuotes         : false,
	removeComments                : true,
	removeEmptyAttributes         : true,
	removeEmptyElements           : false,
	removeOptionalTags            : false,
	removeRedundantAttributes     : false,
	removeScriptTypeAttributes    : false,
	removeStyleLinkTypeAttributes : false,
	removeTagWhitespace           : false,
	sortAttributes                : true,
	sortClassName                 : true
};

class HTML
{
	constructor(_baseDirPath)
	{
		this.baseDirPath = _baseDirPath;
	}

	render(subPath, data={}, options={})
	{
		const self=this;
		const requirePath = path.join(this.baseDirPath, `${subPath}.js`);
		delete require.cache[require.resolve(requirePath)];
		let htmlRaw = require(requirePath)(data, {
			html : this.html.bind(this),
			include(includeSubPath, includeData=data) { return self.render(includeSubPath, includeData, {skipMinify : true}); } });

		const minifyOptions = {...HTML_MINIFY_OPTIONS};
		if(options.preserveWhitespace)
			minifyOptions.collapseWhitespace = false;

		if(!options.skipMinify)
		{
			try { htmlRaw = minify(htmlRaw, minifyOptions); }
			catch(err) {}
		}

		return htmlRaw;
	}

	html(strs, ...vals)
	{
		const r = [];
		strs.forEach(str =>
		{
			r.push(str);

			if(vals.length>0)
				r.push(vals.shift());
		});

		return r.join("");
	}
}

exports.HTML = HTML;
